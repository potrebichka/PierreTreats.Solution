@model PierreSweets.Models.Treat
@using System.Security.Claims

<h2>Treat Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>
<hr/>
<h3>@Html.DisplayNameFor(model => model.Description): @Html.DisplayFor(model => model.Description)</h3>
<hr/>
<h3>@Html.DisplayNameFor(model => model.Price): @Html.DisplayFor(model => model.Price)</h3>
<hr/>
@if(@Model.Flavors.Count == 0)
{
  <h3>This treat does not belong to any flavors</h3>
}
else
{
  <h4>Flavors the treat belongs to:</h4>
  <ul>
    @foreach(var join in Model.Flavors)
    {
      <li>@join.Flavor.Description</li>
      @using (Html.BeginForm("DeleteFlavor", "Treats"))
      {
        @Html.Hidden("joinId", @join.TreatFlavorId)
        <input type="submit" value="delete" class="btn btn-danger" />
      }
    }
  </ul>
}
<hr/>

@if (User.Identity.IsAuthenticated && ViewBag.IsCurrentUser)
{
  <h3>@Html.ActionLink("Edit Treat", "Edit", new {id = Model.TreatId} , new {@class = "tab" })</h3>
  <h3>@Html.ActionLink("Delete Treat", "Delete", new {id = Model.TreatId}, new {@class = "tab" })</h3>
  <h3>@Html.ActionLink("Add a Flavor", "AddFlavor", new { id = Model.TreatId }, new {@class = "tab" })</h3>
  <h3>@Html.ActionLink("Delete a Flavor", "DeleteFlavor", new { id = Model.TreatId }, new {@class = "tab" })</h3>
}

<h3>@Html.ActionLink("Back to list of treats", "Index", null, null, new {@class = "tab" })</h3>