@model PierreSweets.Models.Order
@using System.Security.Claims

<h2>Order Details</h2>
<hr/>
<h3>@Html.DisplayNameFor(model => model.Description): @Html.DisplayFor(model => model.Description)</h3>
<hr/>
<h3>@Html.DisplayNameFor(model => model.Price): @Html.DisplayFor(model => model.Price)</h3>
<hr/>
@if(@Model.Treats.Count == 0)
{
  <h3>No treats in order.</h3>
}
else
{
  <h4>Treats in order:</h4>
  <ul>
    @foreach(var join in Model.Treats)
    {
      <li>@join.Treat.Name : @join.Treat.Price</li>
      @using (Html.BeginForm("DeleteTreat", "Orders"))
      {
        @Html.Hidden("joinId", @join.OrderTreatId)
        <input type="submit" value="delete" class="btn btn-danger" />
      }
    }
  </ul>
}
<hr/>

@if (User.Identity.IsAuthenticated)
{
  <h3>@Html.ActionLink("Edit Order", "Edit", new {id = Model.OrderId} , new {@class = "tab" })</h3>
  <h3>@Html.ActionLink("Delete Order", "Delete", new {id = Model.OrderId}, new {@class = "tab" })</h3>
  <h3>@Html.ActionLink("Add a Treat to order", "AddTreat", new { id = Model.OrderId }, new {@class = "tab" })</h3>
  <h3>@Html.ActionLink("Submit order", "Submit", new { id = Model.OrderId }, new {@class = "tab" })</h3>
}

<h3>@Html.ActionLink("Back to list of orders", "Index", null, null, new {@class = "tab" })</h3>